
**** mysql -u root -p; - доступ к консоли 
**** mysql -u root -p root;  - доступ к консоли с паролем
**** grant all privileges on *.* to 'SQLsql'@'localhost' identified by 'ROOT2'; создание нового пользователя SQLsql с неограниченными правами доступа (c паролем "ROOT2" этого пользователя) - далее выйти QUIT, и вновь зарегестрироваться в базе под новым пользователем mysql -u SQLsql -p;
**** SHOW DATABASES; - просмотр существующих баз
**** CREATE DATABASE Test; - создание новой базы Test
**** USE Test; - выбор базы Test для работы с ней
**** mysql -u SQLsql -p Test; - выбор пользователя SQLsql и базы Test при входе 
**** SELECT now(); - отображение текущего времени базы

Наборы символов (кодировки)
**** SHOW CHARACTER SET; - отображение поддерживаемых сервером наборы символов
**** CREATE DATABASE Test CHARACTER SET utf8; - определение набора символов при создании базы Test
**** VARCHAR(20) CHARACTER SET utf8; - выбор набора символов столбца (поля) при описании

--Типы данных--
**** CHAR(20)  ; - строка фиксированной длины (пробелы справа) макс.255 символов
**** VARCHAR(20); - строка переменной длины длиной 20 символов макс.255 символов
**** Tinytext - 255 символов
**** Text - 65 535 символов
**** Mediumtext - 16 777 215 символов
**** Longtext - 4 294 967 295 символов
**** Tinyint - (-127...127 или 0...255)
**** Smallint - (-32 768...32 767 или 0...65 535)
**** Mediumint - (-8 338 608...8 388 607 или 0...16 777 215)
**** INT - (-2 147 483 648...2 147 483 647 или 0...4 294 967 295)
**** Bigint - (-19 223 036 854 775 808...19 223 036 854 775 807 или 0...18 446 744 073  709 551 615)
**** Float (p,s) - (от 3,402823466E+38 до 1,175494351E 38 и от 1,175494351E 38 до 3,402823466E+38)
**** Double(p,s) - (от 1,7976931348623157E+308 до 2,2250738585072014E 308 и от 2,2250738585072014E 308 до 1,7976931348623157E+308)
**** Date (YYYY MM DD) - от 1000-01-01 до 9999-12-31
**** Datetime (YYYY MM DD HH:MI:SS) - от 1000-01-01 00:00:00 до 9999-12-31 23:59:59
**** Timestamp (YYYY MM DD HH:MI:SS) - от 1970-01-01 00:00:00 до 2037-12-31 23:59:59
**** Year (YYYY) - от 1901 до 2155
**** Time (HHH:MI:SS) - от 838:59:59 до 838:59:59
**** ENUM (...,...) - перечисление в виде выбора (радиокнопка) 

--Команды--(создание, удаление, вставка)
**** CREATE DATABASE Test; - создание новой базы Test (наименование без пробелов внутри)
**** SHOW DATABASES; - просмотр существующих баз
**** DROP DATABASE Test; - удаление базы Test
**** USE Test; - выбор базы Test для работы с ней
**** CREATE TABLE people (id INT, fname VARCHAR(30), lname VARCHAR(30)); - создание таблицы people в базе Test с полями:id (INT), fname (VARCHAR(30)), lname (VARCHAR(30))
**** CREATE TABLE people (id INT, fname VARCHAR(30), lname VARCHAR(30), user_id INT, FOREIGN KEY user_id REFERENCE contacts (contacts_id)); - создание таблицы people в базе Test с полями:id (INT), fname (VARCHAR(30)), lname (VARCHAR(30)), user_id (INT) с внешней ссылкой на поле contacts_id таблицы contacts 
**** DESC people; - просмотр структуры таблицы people базы Test
**** DROP TABLE people; - удаление таблицы people базы Test
**** INSERT INTO people VALUES (1, 'John', 'Smit'); - введение данных в строгом порядке в таблицы people базы Test
**** INSERT INTO people (fname, lname) VALUES ('John', 'Smit'); - введение данных в произвольном порядке в таблицы people базы Test
**** SELECT * FROM people; - вывод всех данных из таблицы people базы Test
**** SELECT fname, lname FROM people; - вывод нужных данных из таблицы people базы Test

--SELECT--(выборка)
**** SELECT ['поле/столбец' или '*'] FROM [название таблицы]; - простой синтаксис
**** SELECT ['поле/столбец' или '*'] FROM [название таблицы] WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение']; - расширенный синтаксис с условием в WHERE
**** SELECT ['поле/столбец' или '*'] FROM [название таблицы] WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение'] AND/OR ['поле/столбец' или '=,<,>,<=,>=,<>''значение']; - расширенный синтаксис с условием в WHERE и AND/OR
**** SELECT ['поле/столбец' или '*'] FROM [название таблицы] WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение'] AND/OR/WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение']; - расширенный синтаксис с условием в WHERE и AND/OR/WHERE
**** SELECT ['поле/столбец' или '*'] FROM [название таблицы] WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение'] AND/OR/WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение'] LIKE ['%, _']; - расширенный синтаксис с условием в WHERE и AND/OR/WHERE с выполенением условия LIKE (% - все символы, _- один символ)
**** SELECT ['поле/столбец' или '*'] FROM [название таблицы] WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение'] AND/OR/WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение'] IN [(...)]; - расширенный синтаксис с условием в WHERE и AND/OR/WHERE с параметрами IN
****SELECT ['поле/столбец' или '*'] FROM [название таблицы] WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение'] AND/OR/WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение'] BETWEEN ['значение' AND/OR 'значение']; - расширенный синтаксис с условием в WHERE и AND/OR/WHERE с параметрами в диапазоне BETWEEN
**** SELECT ['поле/столбец' или '*'] FROM [название таблицы] WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение'] AND/OR/WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение'] NOT ['значение' AND/OR 'значение']; - расширенный синтаксис с условием в WHERE и AND/OR/WHERE с параметрами вне диапазона NOT
**** SELECT (поле, ...) FROM people ORDER BY (поле1,...); - вывод данных в прямом порядке поле1
SELECT (поле, ...) FROM people ORDER BY (поле1,...) DESC; - вывод данных в обратном порядке поле1
**** SELECT SUM(поле) FROM people; - сумма чисел поля
**** SELECT MIN/MAX(поле) FROM people; - вывод минимального/максимального числа поля
**** SELECT COUNT(проле) FROM people; - вывод количества записей поля
**** SELECT AVG(поле) FROM people; - среднее арифметическое поля
**** SELECT DISTINCT(поле) FROM people; - вывод без дубликатов в поле
**** SELECT (поле,...)  FROM people ORDER BY (поле) DESC LIMIT 2; - вывод 2-х значений полей из таблицы


--Записи таблиц--(удаление и обновление)
**** DELETE FROM people; - удаление всех записей из таблицы people
**** DELETE FROM people WHERE ['поле/столбец' или '=,<,>,<=,>=,<>''значение']; - удаление записей по условию WHERE из таблицы people
**** UPDATE people SET ['поле'='значение/формула']; - обновление поля на значение в people
**** UPDATE people SET ['поле'='значение/формула'] WHERE [условие]; - обновление поля на значение в people с условием в WHERE
**** UPDATE people SET (поле=) CASE WHEN (поле = значение) THEN (значение) ELSE (значение) END; - обновление значения в поле по условию CASE

--ALTER TABLE-- (редактирование)
**** ALTER TABLE people ADD COLUMN id2 INT AUTO_INCREMENT NOT NULL; -  добавление поля id2 типа INT в таблицу people с автовозрастанием значения в конец таблицы
**** ALTER TABLE people ADD COLUMN id2 INT AUTO_INCREMENT NOT NULL FIRST; -  добавление поля id2 в таблицу people с автовозрастанием значения в начало таблицы
**** ALTER TABLE people ADD COLUMN id2 INT AUTO_INCREMENT NOT NULL AFTER id; -  добавление поля id2 в таблицу people с автовозрастанием значения после поля id
**** ALTER TABLE people ADD COLUMN id2 INT AUTO_INCREMENT NOT NULL FIRST ADD PRIMARY KEY (id2); -  добавление поля id2 в таблицу people с автовозрастанием значения в начало таблицы с установкой его как первичного ключа
**** ALTER TABLE people DROP COLUMN id; - удаление поля/столбца
**** ALTER TABLE people RENAME TO people2; - переименование таблицы
**** ALTER TABLE people CHANGE [старое_имя новое_имя тип атрибуты/ограничители] - переименование имени поля с установкой типа данный и атрибутов
**** ALTER TABLE people MODIFY COLUMN [поле тип] - изменение типа поля
**** ALTER TABLE people ADD FOREIGN KEY (customer_id) REFERENCES Customers (id) ON DELETE RESTRICT ON UPDATE CASCADE); - добавление внешнего ключа из поля id таблицы Customers в поле customer_id таблицы people
**** ALTER TABLE people DROP FOREIGN KEY <Имя внешнего ключа>; - удаление внешнего ключа таблицы people
**** ALTER TABLE people CONVERT TO CHARACTER SET cp1251; - конвертация таблицы people в новую кодировку cp1251


--Строковые функции--
**** SELECT (UPDATE people SET) UPPER/LOWER (поле) FROM people; - все значаения поля в верхнем/нижненм регистре для отображения не меняя само значение
**** SELECT RIGHT/LEFT (поле, кол-во символов) FROM people; - возвращает символы в количестве слева/справа от значения поле
**** UPDATE people SET SUBSTRING_INDEX (поле, 'разделитель', номер разделителя); - возврат всех символов до разделителя (+) после разделителя (-)
**** SELECT RTRIM/LTRIM (поле) FROM people; - удаление пробелов справа или слева




